{"version":3,"sources":["components/Profile/profile.module.css","components/FriendList/friendList.module.css","components/Statistics/statistics.module.css","components/TransactionHistory/transactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","followers","views","likes","className","styles","profile","description","src","alt","width","stat","list","label","quantity","Statistics","title","statistics","statList","map","item","style","backgroundColor","Math","random","percentage","id","FriendListItem","isOnline","onlineStatus","online","offline","FriendList","friends","friendList","friend","defaultProps","TransactionHistory","items","transactionTable","tablerow","type","amount","currency","App","user","StatisticsData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55f0ecd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__2f7sg\",\"description\":\"profile_description__26kFC\",\"avatar\":\"profile_avatar__1St8I\",\"tag\":\"profile_tag__3sWPu\",\"location\":\"profile_location__1Mg2b\",\"name\":\"profile_name__34IHl\",\"stat\":\"profile_stat__3uIkC\",\"label\":\"profile_label__39URe\",\"quantity\":\"profile_quantity__KeaUo\",\"list\":\"profile_list__Gytsy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"friendList_friendList__3Lk-d\",\"item\":\"friendList_item__1pe58\",\"online\":\"friendList_online__1OtrA\",\"offline\":\"friendList_offline__20FXW\",\"avatar\":\"friendList_avatar__3I5Be\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__LBFXx\",\"title\":\"statistics_title__1V8MF\",\"statList\":\"statistics_statList__2iMzP\",\"item\":\"statistics_item__1qeSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionTable\":\"transactionHistory_transactionTable__1VrEa\",\"type\":\"transactionHistory_type__3pUNK\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './profile.module.css';\n\nconst Profile = ({\n  avatar,\n  name,\n  tag,\n  location,\n  stats: { followers, views, likes },\n}) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img\n        className={styles.avatar}\n        src={avatar}\n        alt=\"Аватар пользователя\"\n        width=\"180px\"\n      />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n    <ul className={styles.stat}>\n      <li className={styles.list}>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{followers}</span>\n      </li>\n      <li className={styles.list}>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{views}</span>\n      </li>\n      <li className={styles.list}>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './statistics.module.css';\n\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.statistics}>\n    {typeof title !== 'undefined' && <h2 className={styles.title}>{title}</h2>}\n    <ul className={styles.statList}>\n      {stats.map(stat => (\n        <li\n          key={stat.id}\n          className={styles.item}\n          style={{\n            backgroundColor: `hsl(${Math.random() * 360}, 100%, 75%)`,\n          }}\n        >\n          <span className={styles.label}>{stat.label}</span>\n          <span className={styles.percentage}>{stat.percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './friendList.module.css';\n\nfunction FriendListItem({ avatar, name, isOnline }) {\n  const onlineStatus = isOnline ? styles.online : styles.offline;\n  return (\n    <li className={styles.item}>\n      <span className={onlineStatus}>{isOnline}</span>\n      <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport styles from './friendList.module.css';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={styles.friendList}>\n      {friends.map(friend => (\n        <FriendListItem\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n          key={friend.id}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriendList.defaultProps = {\n  friends: [],\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './transactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transactionTable}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(item => (\n        <tr className={styles.tablerow} key={item.id}>\n          <td className={styles.type}>{item.type}</td>\n          <td className={styles.type}>{item.amount}</td>\n          <td className={styles.type}>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nTransactionHistory.defaultProps = {\n  items: [],\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import './App.css';\n\nimport React from 'react';\nimport user from './components/Profile/user.json';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport StatisticsData from './components/Statistics/statistical-data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './components/FriendList/friends.json';\nimport transactions from './components/TransactionHistory/transactions.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nconst App = () => {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={StatisticsData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}